pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'https://index.docker.io/v1/'
        DOCKERHUB_CREDENTIALS = 'dockerhub'
        SERVICE_NAME = 'web'
    }

    stages {
        stage('Clone repository') {
            steps {
                checkout scm
            }
        }

        stage('Build image') {
            steps {
                script {
                    def shopWeb = docker.build("attamegnon/attamegnon2022:web_v0.0${env.BUILD_NUMBER}", "-f SHOP-PRODUCT/Dockerfile .")
                    // Additional build steps if needed
                }
            }
        }

        stage('Push image to DockerHub and remove local image') {
            steps {
                script {
                    docker.withRegistry(DOCKER_REGISTRY, DOCKERHUB_CREDENTIALS) {
                        sh "docker push attamegnon/attamegnon2022:web_v0.0${env.BUILD_NUMBER}"
                        sh "docker images"
                        sh "docker rmi -f attamegnon/attamegnon2022:web_v0.0${env.BUILD_NUMBER}"
                        sh "docker images"
                    }
                }
            }
        }

        stage('Trigger ManifestUpdate') {
            steps {
                script {
                    def web = "web_v0.0${env.BUILD_NUMBER}"
                    echo "Triggering updatemanifestjob with DOCKERTAG=${web}"
                    build job: 'updatemanifest', parameters: [string(name: 'DOCKERTAG', value: "${web}")]
                }
            }
        }
    }
}

