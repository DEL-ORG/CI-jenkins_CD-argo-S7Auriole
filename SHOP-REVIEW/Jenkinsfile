pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'https://index.docker.io/v1/'
        DOCKERHUB_CREDENTIALS = 'dockerhub'   //should match the credential name in Jenkins
        TAG = 'SHOP-REVIEW'
       
    }

    stages {
        stage('Cloning CI-SHOP-REVIEW repo') {
            steps {
                checkout scm
            }
        }

        stage('Building  image SHOP-REVIEW') {
            steps {
                script {
                    docker.build("attamegnon/attamegnon2022:${TAG}_v0.0${env.BUILD_NUMBER}", "-f ${TAG}/Dockerfile .")
                    // Additional build steps if needed
                }
            }
        }

        stage('Pushing image SHOP-REVIEW with tag to DockerHub and remove local image') {
            steps {
                script {
                    docker.withRegistry(DOCKER_REGISTRY, DOCKERHUB_CREDENTIALS) {
                        echo "Pushing image with TAG ${TAG}_v0.0${env.BUILD_NUMBER} to DockerHub"
                        sh "docker push attamegnon/attamegnon2022:${TAG}_v0.0${env.BUILD_NUMBER}"
                        sh "docker images"
                        sh "docker rmi -f attamegnon/attamegnon2022:${TAG}_v0.0${env.BUILD_NUMBER}"
                        sh "docker images"
                    }
                }
            }
        }

        stage('Triggering CD-SHOP-REVIEW-ManifestUpdate') {
            steps {
                script {
                    FUNCTION = "${TAG}_v0.0${env.BUILD_NUMBER}"
                    echo "Triggering updatemanifestjob with DOCKERTAG=${FUNCTION}"
                    build job: 'SHOP-REVIEW', parameters: [string(name: 'DOCKERTAG', value: "${FUNCTION}")]
                }
            }
        }
    }
}
